# Quarkus will choose application.yaml over application.properties.
quarkus:
    http:
        port: 8080
        read-timeout: 30m
        limits:
          max-body-size: 500M

    package:
        uber-jar: true

    # Logging (disable console on prod)
    log:
        level: INFO
        category:
            "org.commonjava.service.metadata":
                level: DEBUG
        console:
            level: DEBUG
            enable: true
        file:
            enable: true
            path: "log/indy-metadata.log"
            level: DEBUG
            format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
            rotation:
                max-backup-index: 5
                max-file-size: 10M

    opentelemetry:
        enabled: true
        tracer:
            exporter:
                otlp:
                # This is for sending to something like opentelemetry-collector
                # endpoint: http://localhost:4317

                # This is for sending to Honeycomb
                #endpoint: "https://api.honeycomb.io:443"
                #headers:
                #    - "x-honeycomb-team=<key>"
                #    - "x-honeycomb-dataset=<dataset>"
                logging:
                    loglevel: debug

    oidc-client:
        auth-server-url: "keycloak_server_url/realms/pncredhat"
        client-id: your_client_id
        credentials:
            secret: your_secret

    swagger-ui:
        always-include: true

kafka:
    bootstrap:
        servers: "localhost:9092"

ispn:
    enabled: true
    hotrod:
        client:
            config: "/opt/indy-metadata/hotrod-client.properties"
    cache:
        dir: "/opt/indy-metadata"

storage-service-api/mp-rest/url: http://localhost
storage-service-api/mp-rest/scope: javax.inject.Singleton

repo-service-api/mp-rest/url: http://localhost
repo-service-api/mp-rest/scope: javax.inject.Singleton

indy_security:
    enabled: true
    security_bindings_yaml: ""

"%dev":
    quarkus:
        kubernetes-config:
            enabled: false
        log:
            level: TRACE
            min-level: TRACE
            category:
                "org.commonjava.service.metadata":
                    level: TRACE
            console:
                enable: true
            file:
                enable: true
                path: "log/indy-metadata.log"
                format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
                rotation:
                    max-backup-index: 5
                    max-file-size: 10M

    kafka:
        bootstrap:
            servers: "localhost:9092"

    # Configuring the incoming/outgoing channel
    mp:
        messaging:
            incoming:
                file-event-in:
                    connector: smallrye-kafka
                    topic: file-event
                    value:
                        deserializer: org.commonjava.event.file.FileEventDeserializer
                promote-event-in:
                    connector: smallrye-kafka
                    topic: promote-complete
                    value:
                        deserializer: org.commonjava.service.metadata.handler.PathsPromoteCompleteEventDeserializer

    ispn:
        hotrod:
            client:
                config: "/tmp/hotrod-client.properties"

    storage-api/mp-rest/url: http://localhost
    storage-api/mp-rest/scope: javax.inject.Singleton

    indy_security:
        enabled: true
        security_bindings_yaml: ""